[build-system]
requires = [ "flot>=0.7.0" ]
build-backend = "flot.buildapi"

[project]
name = "purldb-toolkit"
version = "0.2.0"
description = "A toolkit and library to use the PurlDB and its API"
readme = "README.rst"
license = { text = "Apache-2.0" }
requires-python = ">=3.7"

authors = [
    { name = "nexB. Inc. and others", email = "info@aboutcode.org" },
]

keywords = [
    "purl",
    "Package-URL",
    "Git",
    "metadata",
    "package",
    "dependencies",
    "open source",
    "package",
    "sca",
    "scan",
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
    "Topic :: Utilities",
]

dependencies = [
    "click >= 6.7, !=7.0",
    "fetchcode",
    "packageurl_python >= 0.13.4",
    "requests >= 2.7.0",
]

urls = { Homepage = "https://github.com/nexB/purldb/tree/main/purldb-toolkit" }


[project.optional-dependencies]
docs = [
    "doc8 >= 0.8.1",
    "Sphinx == 5.1.0",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-reredirects >= 0.1.2",
    "sphinx-rtd-dark-mode>=1.3.0",
    "sphinx_rtd_theme >= 0.5.1",
]

testing = [
    "aboutcode-toolkit >= 7.0.2",
    "black",
    "isort",
    "pycodestyle >= 2.8.0",
    "pytest >= 6, != 7.0.0",
    "pytest-rerunfailures",
    "pytest-xdist >= 2",
    "twine",
    "vendorize >= 0.2.0",
    "bump-my-version",
]


[tool.bumpversion]
current_version = "0.2.0"
allow_dirty = true

files = [
    { filename = "pyproject.toml" },
]

[project.scripts]
purlcli = "purldb_toolkit.purlcli:purlcli"

[tool.flot]
includes = [
    "src/**/*",
]
excludes = [
    # Python compiled files
    "**/*.py[cod]",
    "**/*.egg-info",
    # Various junk and temp files
    "**/.DS_Store",
    "**/*~",
    "**/.*.sw[po]",
    "**/.ve",
    "**/*.bak",
    "**/.ipynb_checkpoints",
]

metadata_files = ["*.LICENSE", "NOTICE",  ]
editable_paths = ["src", "tests"]
wheel_path_prefixes_to_strip = ["src"]
sdist_extra_includes = [
    "etc/**/*",
    "docs/**/*",
    ".github/**/*",
    "tests/**/*",
    ".gitattributes",
    ".gitignore",
    "thirdparty/**/*",
    "*.LICENSE",
    "NOTICE",
    "*.ABOUT",
    "*.toml",
    "*.yml",
    "*.rst",
    "*.py",
]

[tool.isort]
force_single_line = "True"
line_length = 88
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip = "doc,venv,tmp,thirdparty,build,dist"


[tool.pytest.ini_options]
norecursedirs = [
   ".git",
   "bin",
   "dist",
   "build",
   "_build",
   "dist",
   "etc",
   "local",
   "ci",
   "docs",
   "man",
   "share",
   "samples",
   ".cache",
   ".settings",
   "Include",
   "include",
   "Lib",
   "lib",
   "lib64",
   "Lib64",
   "Scripts",
   "thirdparty",
   "tmp",
   "venv",
   "tests/data",
   ".eggs",
   "src/*/data",
   "tests/*/data"
]

python_files = "*.py"

python_classes = "Test"
python_functions = "test"

addopts = [
    "-rfExXw",
    "--strict-markers",
    "--doctest-modules"
]
